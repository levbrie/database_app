<!DOCTYPE html>
<html>
<head>
	<title>Artwork App</title>
	<%= stylesheet_link_tag    "application", :media => "all" %>
	<link href='http://fonts.googleapis.com/css?family=Josefin+Slab:300,400,600' rel='stylesheet' type='text/css'> 
	<script type="text/javascript">try{Typekit.load();}catch(e){}</script>
	<%= javascript_include_tag "application" %>
	<%= csrf_meta_tags %>
	<%= render 'layouts/shim' %>
</head>
<body>
	<%= render 'layouts/header' %>
	<%= render 'shared/modal' %>
	<div class="container">
			<!-- Adds contents of the special flash variable to site 
			layout for messages that appear and then disappear on 
			subsequent reloads -->
			<% flash.each do |name, msg| %>
			
			<div class="alert alert-<%= name == :notice ? "success" : "error" %>">
				<a class="close" data-dismiss="alert">x</a>
				<%= msg  %>
			</div>
			<% end %>
		</div>
		<%= yield %>
		<%= render 'layouts/footer' %>
			<!-- add debug info to site layout to display useful info about
				each page using the built-in debug method and params variable, 
				and make sure it only displays in development env -->
				<div class="container">
					<%= debug(params) if Rails.env.development? %>
				</div>
				<% if Rails.env.development? %>
				<div class="container">
					<div class="hero">
						<h4>Original URL:</h4>
						<p><%= request.original_url() %></p>
						<h4>Local?:</h4>
						<p class="request-par">
							<%= request.local? %>
						</p>					
						<h4>IP:</h4>
						<p class="request-par">
							<%= request.ip %>
						</p>
						<h4>Query Parameters</h4>
						<p class="request-par">
							<%= request.query_parameters %>
						</p>
						<h4>Server Software:</h4>
						<p class="request-par">
							<%= request.server_software %>
						</p>
					</div>
				</div>
				<% end %>
				    <script type="text/javascript">
        $(function(){

            var $container = $('#gallery_container'),
                  $filters = $("#filters a");
        
            $container.imagesLoaded( function(){
                $container.isotope({
                    itemSelector : '.photo',
                    masonry: {
                        columnWidth: 102
                    }
                });
            });

            // filter items when filter link is clicked
            $filters.click(function() {
                $filters.removeClass("active");
                $(this).addClass("active");
                var selector = $(this).data('filter');
                $container.isotope({ filter: selector });
                return false;
            });
        
        
        });
    </script>
			</body>
			</html>
